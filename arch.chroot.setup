#!/bin/bash

ask_continue () {
	read -p "$1" -n 1 -r
	echo # (optional) move to a new line
	if [[ ! $REPLY =~ ^[Yy]$ ]]
	then
        echo "Exiting now !"
	    exit 1
	fi
}

echo "your username: $1"
echo "your hostname: $2"
echo "your EFI partition is at: $3"
ask_continue "Are you sure ? (y/n) "

mkdir downloads files music pictures templates videos workspace

## Install Kernel
pacman -S linux-lts linux-lts-headers linux-firmware intel-ucode

## Install Some packages
pacman -S nano base-devel openssh

## Install network packages
pacman -S networkmanager wpa_supplicant wireless_tools netctl
pacman -S dialog

## Enable networkmanager at boot
systemctl enable NetworkManager

## Change locale : uncomment your locale
nano /etc/locale.gen 
locale-gen 

## Create user and add to groups
useradd -m -g users -G wheel $1

## Set password for user
passwd $1


## Edit `sudo` config: uncomment %wheel ALL=(ALL) ALL
echo "uncomment %wheel ALL=(ALL) ALL"
ask_continue " Got it, continue ? (y/n) "
EDITOR=nano visudo

# Install GRUB

## Install the packages for GRUB
pacman -S grub efibootmgr dosfstools os-prober mtools

## Mount boot EFI
mkdir /boot/EFI
mount $3 /boot/EFI

## Install GRUB for EFI
grub-install --target=x86_64-efi --bootloader-id=arch --recheck

## Check and Create `locale` directory
ls -l /boot/grub 
mkdir /boot/grub/locale

## Add locales for grub messages
cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo

## Generate GRUB conf
grub-mkconfig -o /boot/grub/grub.cfg

# Tweaking Arch Installation

## Setting Timezone
timedatectl set-timezone "Europe/Amsterdam"
systemctl enable systemd-timesyncd

## Setting Hostname
hostnamectl set-hostname "$2"

## Add ip to localhost :  127.0.0.1 localhost
## Add ip to host :  127.0.1.1 host-name-here
echo "127.0.0.1 localhost" >> /etc/hosts
echo "127.0.1.1 $2" >> /etc/hosts
sudo pacman -S xorg-server xorg-xinput xorg-xinit awesome linux-lts-headers htop neofetch  rofi ranger pcmanfm gvfs firefox chromium lxappearance docker docker-compose lm_sensors pavucontrol pulseaudio psensor python-pip openjdk-src ttf-fira-code  ttf-font-awesome ttf-hack vim keepassxc simplescreenrecorder obs-studio zathura gnome-screenshot engrampa breeze openvpn wget curl mpd ncmpcpp cmatrix vlc cheese qt5ct ffmpeg ffmpegthumbnailer poppler gedit alacritty lxsession-gtk3

# Copy xinit config
cp .xinitrc ~/

# Copy dell-bios-off, fan modules, systemd-login, xorg.conf
sudo cp ~/archsetup/dot.system/dell-bios-off 		/opt/
sudo cp ~/archsetup/dot.system/modules 				/etc
sudo cp ~/archsetup/dot.system/xorg.conf 			/etc/X11
sudo cp ~/archsetup/dot.system/dell-smm-hwmon.conf 	/etc/modprobe.d/
sudo cp ~/archsetup/dot.system/i8k.conf 			/etc/modprobe.d/
sudo cp ~/archsetup/dot.system/logind.conf			/etc/systemd/

# Disable MPD
sudo systemctl disable mpd.service

# Copy to .config
mkdir ~/.config
cp -r ~/archsetup/dot.config/*		~/.config/

# Copy to .local
mkdir ~/.local
cp -r ~/archsetup/dot.local/*			~/.local/

# Copy to .mozilla
mkdir ~/.mozilla
cp -r ~/archsetup/dot.mozilla.addons/*	~/.mozilla

# Copy to .icons
mkdir ~/.icons
cp -r ~/archsetup/dot.icons/*			~/.icons

# Copy to .themes
mkdir ~/.themes
cp -r ~/archsetup/dot.themes/*		~/.themes

# Copy to ~
cp ~/archsetup/dot.home/{.bashrc,.gtkrc-2.0,.profile,.selected_editor,.xinitrc} ~/

# Add dell-bios-off
sudo crontab -e

# Customize GRUB
cd ~/archsetup/dot.system/theme.grub/
sudo ./install.sh -i -f Terminus.ttf -fs 20 -l --background "Grey"
cd ~

# Install i8kutils
mkdir ~/.local/packages
cd ~/.local/packages
git clone https://aur.archlinux.org/i8kutils.git
cd i8kutils
makepkg
pacman -U *.pkg.tar.zst
cd ~